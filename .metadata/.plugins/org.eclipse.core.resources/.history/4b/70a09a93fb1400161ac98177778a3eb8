'''

@author: Yanqing
'''
from Helpers import *

# Require: D is a set of ordered pairs sorted in increasing order by x-value
# Require: Q is a y-axis partition of D
# Require: x is an integer greater than 1
def ApproxOptimizeXAxis(D, Q, x, tildek):
    Partition = GetClumpsPartition(D, Q)
    k = len(Partition) - 1;
    if k > tildek:
        Partition = GetSuperclumpsPartition(Partition, tildek)
        numClumps= tildek
    P = [[[] for x in range(1, x + 1)] for y in range(1, k + 1)]
        
    #Find the optimal partitions of size 2
    
    for t in range(2,k + 1):
        for s in range(1, t + 1):
        #Find s \in {1,...,t} maximizing H(<c0,cs,ct>)- H(<c0,cs,cti>,Q).    
        
    
    

if __name__ == '__main__':
    pass